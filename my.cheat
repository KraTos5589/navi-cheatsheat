% git, tag

# Delete local tag
git tag -d <tag>

$ tag: git tag

# Delete a remote tag
git push --delete origin <tag>

$ tag: git tag

# Create a lightweight tag at the current commit
git tag <tag_name>

# Create a lightweight tag at a past commit
git tag <tag_name> <commit_id>

$ commit_id: git log --pretty=oneline | awk '{print $1}'

# Create an annotated tag at the current commit
git tag -a <tag_name>

# Create an annotated tag at a past commit
git tag -a <tag_name> <commit_id>

$ commit_id: git log --pretty=oneline | awk '{print $1}'

# Push All Tags to remote
git push origin --tags

# Push a tag to remote
git push origin <tag_name>

$ tag_name: git tag


% git, log

# Print All Commit messages 
git log --pretty=format:"%s"

# Print All Commit messages reverse order
git log --pretty=format:"%s" --reverse

# Print All Commit messages between 2 commits
git log <from>...<to> --pretty=format:"%s"

$ from: git log --pretty=oneline | awk '{print $1}'
$ to: git log --pretty=oneline | awk '{print $1}'

# Print All Commit messages between 2 commits in reverse order
git log <from>...<to> --pretty=format:"%s" --reverse

$ from: git log --pretty=oneline | awk '{print $1}'
$ to: git log --pretty=oneline | awk '{print $1}'



% git, commit

# Squash last N commits.
git reset --hard HEAD~<number_of_commits> && git merge --squash HEAD@{1} && git commit




% shell

# Print single column
awk '{print $<column_number>}'
